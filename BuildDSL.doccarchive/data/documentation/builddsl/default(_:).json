{"abstract":[{"type":"text","text":"Specifies a default value for a property in a builder pattern."}],"hierarchy":{"paths":[["doc:\/\/builddsl.BuildDSL\/documentation\/BuildDSL"]]},"metadata":{"modules":[{"name":"BuildDSL"}],"externalID":"s:8BuildDSL7Defaultyyypcfm","symbolKind":"macro","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Default","kind":"identifier"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"text":")","kind":"text"}],"role":"symbol","roleHeading":"Macro","title":"Default(_:)"},"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/builddsl.BuildDSL\/documentation\/BuildDSL\/Default(_:)"},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(peer) ","kind":"text"},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Default","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"value","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"text":")","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"value","content":[{"type":"paragraph","inlineContent":[{"text":"The default value to use when the property is not set in the builder.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"This value is captured at compile time and used during object construction."}]}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"@Default"},{"type":"text","text":" macro allows you to provide default values for both "},{"type":"codeVoice","code":"var"},{"text":" and ","type":"text"},{"code":"let","type":"codeVoice"},{"type":"text","text":""},{"type":"text","text":" "},{"type":"text","text":"properties in structs annotated with "},{"type":"codeVoice","code":"Builder"},{"type":"text","text":". When a property has a default value,"},{"type":"text","text":" "},{"type":"text","text":"it becomes optional in the builder and will use the specified default if not set."}],"type":"paragraph"},{"level":2,"type":"heading","text":"Overview","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Unlike Swift’s normal default value syntax which only works with "},{"code":"var","type":"codeVoice"},{"type":"text","text":" properties,"},{"text":" ","type":"text"},{"type":"codeVoice","code":"@Default"},{"type":"text","text":" enables default values for "},{"code":"let","type":"codeVoice"},{"type":"text","text":" properties as well, making immutable"},{"type":"text","text":" "},{"type":"text","text":"properties with sensible defaults possible in the builder pattern."}]},{"level":2,"text":"Usage","anchor":"Usage","type":"heading"},{"inlineContent":[{"text":"Apply ","type":"text"},{"code":"@Default","type":"codeVoice"},{"text":" with a value to any property:","type":"text"}],"type":"paragraph"},{"code":["@Builder","struct Configuration {","    @Default(\"Production\")","    let environment: String","    ","    @Default(true) ","    let enableLogging: Bool","    ","    @Default(TimeInterval(30))","    let timeout: TimeInterval","    ","    let apiKey: String  \/\/ Required field, no default","}"],"syntax":"swift","type":"codeListing"},{"level":2,"text":"Creating Instances","anchor":"Creating-Instances","type":"heading"},{"inlineContent":[{"type":"text","text":"Properties with defaults can be omitted from the builder:"}],"type":"paragraph"},{"code":["\/\/ Use all defaults","let config = Configuration.build { $0","    .apiKey(\"secret-key\")","    \/\/ environment, enableLogging, and timeout will use defaults","}","","\/\/ Override specific defaults","let customConfig = Configuration.build { $0","    .apiKey(\"secret-key\")","    .environment(\"Development\")  \/\/ Override default","    .timeout(60)                 \/\/ Override default","    \/\/ enableLogging still uses default (true)","}"],"syntax":"swift","type":"codeListing"},{"level":2,"text":"Supported Types","anchor":"Supported-Types","type":"heading"},{"inlineContent":[{"type":"codeVoice","code":"@Default"},{"type":"text","text":" accepts any value that can be expressed as a literal or static expression:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["@Builder","struct Examples {","    @Default(42)","    let number: Int","    ","    @Default(\"Hello\")","    let text: String","    ","    @Default([1, 2, 3])","    let numbers: [Int]","    ","    @Default(Date())","    let timestamp: Date","    ","    @Default(Region.us)","    let region: Region  \/\/ Enum case","}"]},{"name":"Note","content":[{"inlineContent":[{"text":"The default value must be compatible with the property’s type and should be","type":"text"},{"text":" ","type":"text"},{"text":"a compile-time constant or easily evaluated expression.","type":"text"}],"type":"paragraph"}],"type":"aside","style":"note"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/builddsl\/default(_:)"]}],"references":{"doc://builddsl.BuildDSL/documentation/BuildDSL/Default(_:)":{"type":"topic","title":"Default(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Default"},{"text":"(","kind":"text"},{"kind":"keyword","text":"Any"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Specifies a default value for a property in a builder pattern."}],"url":"\/documentation\/builddsl\/default(_:)","identifier":"doc:\/\/builddsl.BuildDSL\/documentation\/BuildDSL\/Default(_:)"},"doc://builddsl.BuildDSL/documentation/BuildDSL":{"url":"\/documentation\/builddsl","abstract":[],"role":"collection","kind":"symbol","type":"topic","title":"BuildDSL","identifier":"doc:\/\/builddsl.BuildDSL\/documentation\/BuildDSL"}}}