{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/builddsl\/builder()"]}],"hierarchy":{"paths":[["doc:\/\/builddsl.BuildDSL\/documentation\/BuildDSL"]]},"kind":"symbol","metadata":{"title":"Builder()","externalID":"s:8BuildDSL7Builderyycfm","roleHeading":"Macro","role":"symbol","symbolKind":"macro","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"Builder","kind":"identifier"},{"text":"()","kind":"text"}],"modules":[{"name":"BuildDSL"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Generates a type-safe builder pattern for Swift structs with compile-time validation.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"@attached","kind":"attribute"},{"text":"(extension, conformances: ","kind":"text"},{"preciseIdentifier":"s:8BuildDSL12BuildableAPIP","text":"BuildableAPI","kind":"typeIdentifier","identifier":"doc:\/\/builddsl.BuildDSL\/documentation\/BuildDSL\/BuildableAPI"},{"text":", names: arbitrary) ","kind":"text"},{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Builder","kind":"identifier"},{"text":"()","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"@Builder","type":"codeVoice"},{"text":" macro automatically generates boilerplate code that enables a simple,","type":"text"},{"type":"text","text":" "},{"type":"text","text":"intuitive, and safe instance creation approach using Swift’s result builder pattern."}]},{"type":"heading","text":"Overview","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"When applied to a struct, this macro generates:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A nested ","type":"text"},{"type":"codeVoice","code":"Builder"},{"text":" class with fluent setter methods","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"A static ","type":"text"},{"type":"codeVoice","code":"build(_:)"},{"text":" method that returns a ","type":"text"},{"type":"codeVoice","code":"Result<YourStruct, BuilderError>"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"A failable initializer that accepts a builder closure","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Support for nested builders when working with complex object graphs"}],"type":"paragraph"}]}]},{"type":"heading","anchor":"Usage","text":"Usage","level":2},{"type":"paragraph","inlineContent":[{"text":"Apply the ","type":"text"},{"code":"@Builder","type":"codeVoice"},{"type":"text","text":" macro to any struct to enable the builder pattern:"}]},{"syntax":"swift","code":["@Builder","struct UserAgent {","    let client: String","    let os: String","    ","    @Ignore","    var fullHeader: String = \"User-Agent Header\"","}","","@Builder","struct NetworkConfig {","    @Default(Region.US)","    let region: Region","    let userAgent: UserAgent","}"],"type":"codeListing"},{"type":"heading","anchor":"Creating-Instances","text":"Creating Instances","level":2},{"inlineContent":[{"type":"text","text":"Use the generated builder API to create instances:"}],"type":"paragraph"},{"type":"codeListing","code":["\/\/ Using the static build method (returns Result)","let config = NetworkConfig.build { builder in","    builder","        .region(.ASIA)  \/\/ Override default value","        .userAgentBuilder { userAgentBuilder in","            userAgentBuilder","                .client(\"MyApp\")","                .os(\"macOS\")","        }","}","","\/\/ Handle the Result","switch config {","case .success(let networkConfig):","    print(\"Configuration created: \\(networkConfig)\")","case .failure(let error):","    print(\"Missing required field: \\(error)\")","}","","\/\/ Using failable initializer (returns Optional)","let optionalConfig = NetworkConfig { $0","    .userAgent(UserAgent(client: \"MyApp\", os: \"macOS\"))","}"],"syntax":"swift"},{"type":"heading","level":2,"text":"Error Handling","anchor":"Error-Handling"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The builder validates that all required properties are set:"}]},{"type":"codeListing","syntax":"swift","code":["do {","    let config = try NetworkConfig.build { $0","        .userAgent(UserAgent(client: \"MyApp\", os: \"macOS\"))","        \/\/ region will use default value","    }.get()","} catch {","    print(\"Build failed: \\(error)\")","}"]},{"type":"heading","level":2,"text":"Advanced Usage","anchor":"Advanced-Usage"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the generated result builder in your own functions:"}]},{"type":"codeListing","code":["func createNetworkClient(","    @NetworkConfig.ResultBuilder ","    configBuilder: NetworkConfig.BuilderClosure",") {","    let config = try? NetworkConfig.build(configBuilder).get()","    \/\/ Use config...","}","","\/\/ Call with builder syntax","createNetworkClient { $0","    .userAgent(UserAgent(client: \"CustomClient\", os: \"iOS\"))","}"],"syntax":"swift"},{"type":"aside","style":"note","name":"Note","content":[{"inlineContent":[{"type":"text","text":"Structs must have a memberwise initializer available. Use "},{"type":"codeVoice","code":"Ignore"},{"type":"text","text":""},{"type":"text","text":" "},{"text":"for properties that shouldn’t appear in the builder, and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/builddsl.BuildDSL\/documentation\/BuildDSL\/Default(_:)"},{"type":"text","text":""},{"type":"text","text":" "},{"text":"for properties with default values.","type":"text"}],"type":"paragraph"}]},{"type":"aside","style":"important","name":"Important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When using nested builders, declare dependent structs before"},{"type":"text","text":" "},{"type":"text","text":"their dependents to ensure proper macro execution order."}]}]}],"kind":"content"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/builddsl.BuildDSL\/documentation\/BuildDSL\/Builder()"},"references":{"doc://builddsl.BuildDSL/documentation/BuildDSL":{"url":"\/documentation\/builddsl","abstract":[],"role":"collection","kind":"symbol","type":"topic","title":"BuildDSL","identifier":"doc:\/\/builddsl.BuildDSL\/documentation\/BuildDSL"},"doc://builddsl.BuildDSL/documentation/BuildDSL/Default(_:)":{"type":"topic","title":"Default(_:)","kind":"symbol","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Default"},{"text":"(","kind":"text"},{"kind":"keyword","text":"Any"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Specifies a default value for a property in a builder pattern."}],"url":"\/documentation\/builddsl\/default(_:)","identifier":"doc:\/\/builddsl.BuildDSL\/documentation\/BuildDSL\/Default(_:)"},"doc://builddsl.BuildDSL/documentation/BuildDSL/BuildableAPI":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BuildableAPI","kind":"identifier"}],"identifier":"doc:\/\/builddsl.BuildDSL\/documentation\/BuildDSL\/BuildableAPI","abstract":[{"type":"text","text":"A protocol that enables types to participate in the BuildDSL builder pattern."}],"type":"topic","url":"\/documentation\/builddsl\/buildableapi","navigatorTitle":[{"text":"BuildableAPI","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"BuildableAPI"},"doc://builddsl.BuildDSL/documentation/BuildDSL/Builder()":{"type":"topic","title":"Builder()","kind":"symbol","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Builder"},{"text":"()","kind":"text"}],"abstract":[{"text":"Generates a type-safe builder pattern for Swift structs with compile-time validation.","type":"text"}],"url":"\/documentation\/builddsl\/builder()","identifier":"doc:\/\/builddsl.BuildDSL\/documentation\/BuildDSL\/Builder()"}}}