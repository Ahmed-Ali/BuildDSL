{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@attached"},{"kind":"text","text":"(peer) "},{"kind":"keyword","text":"macro"},{"kind":"text","text":" "},{"kind":"identifier","text":"Ignore"},{"kind":"text","text":"()"}]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"The "},{"code":"@Ignore","type":"codeVoice"},{"text":" macro prevents a property from having a setter method generated","type":"text"},{"text":" ","type":"text"},{"text":"in the builder. This is useful for computed properties, internal state, or","type":"text"},{"text":" ","type":"text"},{"text":"properties that should be initialized through other means.","type":"text"}],"type":"paragraph"},{"level":2,"text":"Overview","anchor":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Properties marked with ","type":"text"},{"code":"@Ignore","type":"codeVoice"},{"text":" will not appear in the generated builder API.","type":"text"},{"text":" ","type":"text"},{"text":"These properties must be initialized either with a default value at declaration","type":"text"},{"text":" ","type":"text"},{"text":"or through a custom initializer.","type":"text"}]},{"anchor":"Usage","text":"Usage","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Apply ","type":"text"},{"code":"@Ignore","type":"codeVoice"},{"text":" to any property that should not be part of the builder:","type":"text"}]},{"code":["@Builder","struct UserProfile {","    let name: String","    let email: String","    ","    @Ignore","    var lastLogin: Date = Date()  \/\/ Computed\/managed internally","    ","    @Ignore","    let id: UUID = UUID()         \/\/ Auto-generated, not user-settable","}"],"syntax":"swift","type":"codeListing"},{"anchor":"Initialization-Requirements","level":2,"text":"Initialization Requirements","type":"heading"},{"inlineContent":[{"text":"Properties marked with ","type":"text"},{"code":"@Ignore","type":"codeVoice"},{"text":" must be initialized. You can do this in several ways:","type":"text"}],"type":"paragraph"},{"level":3,"text":"Option 1: Default Value at Declaration","anchor":"Option-1-Default-Value-at-Declaration","type":"heading"},{"syntax":"swift","type":"codeListing","code":["@Builder","struct Config {","    let apiKey: String","    ","    @Ignore","    var debugMode: Bool = false  \/\/ Has default value","}"]},{"level":3,"text":"Option 2: Custom Initializer","anchor":"Option-2-Custom-Initializer","type":"heading"},{"syntax":"swift","type":"codeListing","code":["@Builder","struct Config {","    let apiKey: String","    ","    @Ignore","    let sessionId: String  \/\/ No default here","}","","extension Config {","    init(apiKey: String) {","        self.apiKey = apiKey","        self.sessionId = UUID().uuidString  \/\/ Set in initializer","    }","}"]},{"level":2,"text":"Use Cases","anchor":"Use-Cases","type":"heading"},{"inlineContent":[{"text":"Common scenarios for using ","type":"text"},{"code":"@Ignore","type":"codeVoice"},{"type":"text","text":":"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Computed properties","type":"text"}]},{"text":": Values derived from other properties","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Internal state","type":"text"}]},{"text":": Properties managed by the object itself","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Auto-generated values","type":"text"}]},{"text":": UUIDs, timestamps, etc.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Cached values","type":"text"}]},{"text":": Properties that are calculated and cached","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"text":"Legacy compatibility","type":"text"}]},{"text":": Properties that shouldnâ€™t be in new builder API","type":"text"}],"type":"paragraph"}]}]},{"type":"codeListing","syntax":"swift","code":["@Builder","struct Article {","    let title: String","    let content: String","    ","    @Ignore","    var wordCount: Int {  \/\/ Computed property","        content.split(separator: \" \").count","    }","    ","    @Ignore","    let createdAt: Date = Date()  \/\/ Auto-generated","}"]},{"type":"heading","level":2,"text":"Builder Usage","anchor":"Builder-Usage"},{"type":"paragraph","inlineContent":[{"text":"The generated builder will only include non-ignored properties:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let article = Article.build { $0","    .title(\"SwiftUI Tips\")","    .content(\"Here are some great SwiftUI tips...\")","    \/\/ wordCount and createdAt are not available in builder","}"]},{"style":"important","type":"aside","name":"Important","content":[{"inlineContent":[{"type":"text","text":"The initializer parameter order and names must match the memberwise"},{"type":"text","text":" "},{"type":"text","text":"initializer exactly when providing a custom initializer for ignored properties."}],"type":"paragraph"}]}],"kind":"content"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/builddsl.BuildDSL\/documentation\/BuildDSL"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/builddsl.BuildDSL\/documentation\/BuildDSL\/Ignore()"},"metadata":{"externalID":"s:8BuildDSL6Ignoreyycfm","title":"Ignore()","symbolKind":"macro","modules":[{"name":"BuildDSL"}],"fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Ignore","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol","roleHeading":"Macro"},"abstract":[{"type":"text","text":"Excludes a property from the generated builder pattern."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/builddsl\/ignore()"]}],"kind":"symbol","references":{"doc://builddsl.BuildDSL/documentation/BuildDSL":{"url":"\/documentation\/builddsl","abstract":[],"role":"collection","kind":"symbol","type":"topic","title":"BuildDSL","identifier":"doc:\/\/builddsl.BuildDSL\/documentation\/BuildDSL"},"doc://builddsl.BuildDSL/documentation/BuildDSL/Ignore()":{"title":"Ignore()","url":"\/documentation\/builddsl\/ignore()","kind":"symbol","abstract":[{"type":"text","text":"Excludes a property from the generated builder pattern."}],"role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Ignore","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","identifier":"doc:\/\/builddsl.BuildDSL\/documentation\/BuildDSL\/Ignore()"}}}